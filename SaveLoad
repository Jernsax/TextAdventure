package textadventure;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

/**
 *
 * @author Rolst
 */
public class SaveLoad {

    private final String fileName = "GameData.dat";
    private final String newGame = "NewGame.dat";

    private static LocationManager lm = null;

    //singleton constructor
    private static SaveLoad sl = new SaveLoad();

    private SaveLoad() {
    }

    ;
    public static SaveLoad getDisc() {
        if (sl == null) {
            sl = new SaveLoad();
        }
        return sl;
    }

    public boolean save(LocationManager locman) {
        FileOutputStream fileOut = null;
        ObjectOutputStream out = null;
        try {
            File yourFile = new File(fileName); //Make file Object
            yourFile.createNewFile(); //Creat file

            fileOut = new FileOutputStream(fileName, false); //create output stream to the file
            out = new ObjectOutputStream(fileOut); //create an object stream for the output stream that turns to file

            out.writeObject(locman); //write arraylisten to file - remember that Location have to be Serializable
        } catch (IOException i) {
            return false; //if something is wrong - return false;
        } finally {
            try {
                out.close(); //close stream
                fileOut.close(); //close file
            } catch (Exception e) {
            }
        }
        return true;
    }

    public LocationManager load() {
        try (
                FileInputStream fileIn = new FileInputStream(fileName); //create file to reading stream
                ObjectInputStream in = new ObjectInputStream(fileIn) //create stream for object from file stream
                ) {
            try {
                lm = (LocationManager) in.readObject();
            } catch (IOException | ClassNotFoundException e) {
                System.out.println(e);
                return lm;
            }
        } catch (IOException i) {
            System.out.println(i);
            System.out.println("Filen eksisterer ikke...");
        }
        return lm;
    }

    public LocationManager newGame() {
        try (
                FileInputStream fileIn = new FileInputStream(newGame); //create file to reading stream
                ObjectInputStream in = new ObjectInputStream(fileIn) //create stream for object from file stream
                ) {
            try {
                lm = (LocationManager) in.readObject();
            } catch (IOException | ClassNotFoundException e) {
                System.out.println(e);
                return lm;
            }
        } catch (IOException i) {
            System.out.println(i);
            System.out.println("Filen eksisterer ikke...");
        }
        return lm;
    }

    private LocationManager getLM() {
        return lm;
    }
}
